import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { X, Mail, Phone, Calendar, User as UserIcon, Shield, AlertCircle } from 'lucide-react';
import { getUserProfilePictureUrl } from '@/utils/imageHandler';
export var UserViewModal = function (_a) {
    var _b, _c, _d, _e, _f, _g;
    var isOpen = _a.isOpen, onClose = _a.onClose, user = _a.user;
    if (!isOpen)
        return null;
    var getUserInitials = function (firstName, secondName) {
        return "".concat(firstName.charAt(0)).concat(secondName.charAt(0)).toUpperCase();
    };
    // Helper variables for easier access to nested properties
    var isBlocked = ((_b = user.block) === null || _b === void 0 ? void 0 : _b.isBlocked) || false;
    var isDeleted = ((_c = user.delete) === null || _c === void 0 ? void 0 : _c.isDeleted) || false;
    var blockReason = (_d = user.block) === null || _d === void 0 ? void 0 : _d.reason;
    var deleteReason = (_e = user.delete) === null || _e === void 0 ? void 0 : _e.reason;
    var blockedAt = (_f = user.block) === null || _f === void 0 ? void 0 : _f.blockedAt;
    var deletedAt = (_g = user.delete) === null || _g === void 0 ? void 0 : _g.deletedAt;
    return (_jsx("div", { className: "fixed inset-0 modal-overlay flex items-center justify-center p-4 z-50", children: _jsxs("div", { className: "bg-white rounded-xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto", children: [_jsxs("div", { className: "flex items-center justify-between p-6 border-b border-gray-200", children: [_jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "User Details" }), _jsx("button", { onClick: onClose, className: "p-2 hover:bg-gray-100 rounded-lg transition-colors", children: _jsx(X, { className: "w-5 h-5 text-gray-500" }) })] }), _jsxs("div", { className: "p-6 space-y-6", children: [_jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("div", { className: "w-20 h-20 bg-gradient-to-br from-blue-500 to-purple-600 rounded-full flex items-center justify-center overflow-hidden flex-shrink-0", children: user.profilePicture ? (_jsx("img", { src: getUserProfilePictureUrl(user.profilePicture), alt: "".concat(user.firstName, " ").concat(user.secondName), className: "w-full h-full object-cover" })) : (_jsx("span", { className: "text-white font-medium text-xl", children: getUserInitials(user.firstName, user.secondName) })) }), _jsxs("div", { children: [_jsxs("h3", { className: "text-2xl font-bold text-gray-900", children: [user.firstName, " ", user.secondName] }), _jsxs("p", { className: "text-gray-600", children: ["ID: ", user._id] }), _jsxs("div", { className: "flex items-center space-x-2 mt-2", children: [_jsx("span", { className: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ".concat(isDeleted
                                                        ? 'bg-red-100 text-red-800'
                                                        : isBlocked
                                                            ? 'bg-yellow-100 text-yellow-800'
                                                            : 'bg-green-100 text-green-800'), children: isDeleted ? 'Deleted' : isBlocked ? 'Blocked' : 'Active' }), user.isEmailVerified && (_jsx("span", { className: "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800", children: "\u2713 Email Verified" }))] })] })] }), _jsxs("div", { className: "bg-gray-50 rounded-lg p-4", children: [_jsx("h4", { className: "text-lg font-semibold text-gray-900 mb-3", children: "Contact Information" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Mail, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Email" }), _jsx("p", { className: "font-medium text-gray-900", children: user.email })] })] }), user.phoneNumber && (_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Phone, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Phone" }), _jsx("p", { className: "font-medium text-gray-900", children: user.phoneNumber })] })] }))] })] }), _jsxs("div", { className: "bg-gray-50 rounded-lg p-4", children: [_jsx("h4", { className: "text-lg font-semibold text-gray-900 mb-3", children: "Personal Information" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(UserIcon, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Gender" }), _jsx("p", { className: "font-medium text-gray-900", children: user.gender ? user.gender.charAt(0).toUpperCase() + user.gender.slice(1) : 'Not specified' })] })] }), user.birthDate && (_jsxs("div", { className: "flex items-center space-x-3", children: [_jsx(Calendar, { className: "w-5 h-5 text-gray-400" }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Birth Date" }), _jsx("p", { className: "font-medium text-gray-900", children: new Date(user.birthDate).toLocaleDateString() })] })] }))] })] }), _jsxs("div", { className: "bg-gray-50 rounded-lg p-4", children: [_jsx("h4", { className: "text-lg font-semibold text-gray-900 mb-3", children: "Account Status" }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Account Status" }), _jsx("span", { className: "font-medium ".concat(isDeleted ? 'text-red-600' : isBlocked ? 'text-yellow-600' : 'text-green-600'), children: isDeleted ? 'Deleted' : isBlocked ? 'Blocked' : 'Active' })] }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "text-gray-600", children: "Email Verification" }), _jsx("span", { className: "font-medium ".concat(user.isEmailVerified ? 'text-green-600' : 'text-red-600'), children: user.isEmailVerified ? 'Verified' : 'Not Verified' })] }), isBlocked && (_jsx("div", { className: "bg-yellow-50 border border-yellow-200 rounded-lg p-3", children: _jsxs("div", { className: "flex items-start space-x-2", children: [_jsx(Shield, { className: "w-5 h-5 text-yellow-600 mt-0.5" }), _jsxs("div", { className: "flex-1", children: [_jsx("p", { className: "text-sm font-medium text-yellow-800", children: "Account Blocked" }), blockReason && (_jsxs("p", { className: "text-sm text-yellow-700 mt-1", children: [_jsx("span", { className: "font-medium", children: "Reason:" }), " ", blockReason] })), blockedAt && (_jsxs("p", { className: "text-sm text-yellow-700 mt-1", children: [_jsx("span", { className: "font-medium", children: "Blocked At:" }), " ", new Date(blockedAt).toLocaleString()] }))] })] }) })), isDeleted && (_jsx("div", { className: "bg-red-50 border border-red-200 rounded-lg p-3", children: _jsxs("div", { className: "flex items-start space-x-2", children: [_jsx(AlertCircle, { className: "w-5 h-5 text-red-600 mt-0.5" }), _jsxs("div", { className: "flex-1", children: [_jsx("p", { className: "text-sm font-medium text-red-800", children: "Account Deleted" }), deleteReason && (_jsxs("p", { className: "text-sm text-red-700 mt-1", children: [_jsx("span", { className: "font-medium", children: "Reason:" }), " ", deleteReason] })), deletedAt && (_jsxs("p", { className: "text-sm text-red-700 mt-1", children: [_jsx("span", { className: "font-medium", children: "Deleted At:" }), " ", new Date(deletedAt).toLocaleString()] }))] })] }) }))] })] }), _jsxs("div", { className: "bg-gray-50 rounded-lg p-4", children: [_jsx("h4", { className: "text-lg font-semibold text-gray-900 mb-3", children: "Timestamps" }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Created At" }), _jsx("p", { className: "font-medium text-gray-900", children: user.formattedCreatedAt || new Date(user.createdAt).toLocaleString() })] }), _jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Last Updated" }), _jsx("p", { className: "font-medium text-gray-900", children: new Date(user.updatedAt).toLocaleString() })] })] })] })] }), _jsx("div", { className: "flex justify-end p-6 border-t border-gray-200", children: _jsx("button", { onClick: onClose, className: "px-4 py-2 text-sm font-medium text-gray-700 bg-gray-100 border border-gray-300 rounded-lg hover:bg-gray-200 transition-colors", children: "Close" }) })] }) }));
};
